install.packages("~/Downloads/rstudio-1.4.1103-amd64.deb", repos = NULL)
install.packages("~/Downloads/rstudio-1.4.1103-amd64-debian.tar.gz", repos = NULL, type = "source")
install.packages("https://repo.miserver.it.umich.edu/cran/bin/linux/ubuntu/bionic-cran40/")
install.packages("https://mirrors.tuna.tsinghua.edu.cn/CRAN/src/contrib/PACKAGES")
install.packages("https://mirrors.tuna.tsinghua.edu.cn/CRAN/bin/linux/ubuntu/bionic-cran40/")
install.packages("~/Downloads/rstudio-1.4.1103-amd64.deb", repos = NULL)
install.packages("~/Downloads/rstudio-1.4.1103-amd64-debian.tar.gz", repos = NULL, type = "source")
install.packages("~/Downloads/rstudio-1.4.1103-amd64-debian.tar.gz", repos = NULL, type = "source")
install.packages("~/Downloads/rstudio-1.4.1103-amd64-debian.tar.gz", repos = NULL, type = "source")
install.packages("shiny")
install.packages("quantmod")
dir()
library(shiny)
ui <- fluidPage(
"Hello, world"
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
devtools::install_github("rstudio/shinyapps")
install.packages(shinyapps)
install.packages("shinyapps")
install.packages("devtools")
devtools::install_github("rstudio/shinyapps")
library(devtools)
devtools::install_github("rstudio/shinyapps")
shinyapps
library(shiny)
rsconnect::setAccountInfo(name='kqics424', token='60BF5644D5A53EBD84F75CC47FB78277', secret='QsoDHtlQu1bYewyZyT8wKi144pL80sBnx1l70S7z')
library(shiny)
ui -< fluidPage()
ui <- fluidPage()
ui <- fluidPage(
"hello, world"
)
library(shiny)
ui <- fluidPage(
"Hello, world"
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(shiny)
runExample("01_hello")
libray(shiny)
library(shiny)
dir()
setwd("Desktop/CS424/Project1")
dir()
load("~/Desktop/CS424/Project1/.RData")
shiny::runApp('~/Desktop/CS424/myShiny/myShiny')
runApp('~/Desktop/CS424/myShiny/myShiny')
dir()
da
positive
EmptyStates<- subset(positve,STATE="",select=c(YEAR,STATE,TP,ES,MWH))
EmptyStates<- subset(positIve,STATE="",select=c(YEAR,STATE,TP,ES,MWH))
EmptyStates<- subset(positive,STATE="",select=c(YEAR,STATE,TP,ES,MWH))
positive$STATE<-as.factor(positive$STATE)
levels(positive$STATE)
EmptyStates<- subset(positive,STATE=" ",select=c(YEAR,STATE,TP,ES,MWH))
EmptyStates<- subset(positive,STATE="  ",select=c(YEAR,STATE,TP,ES,MWH))
levels(positive)[1]
head(levels(positive))
head(positive$YEAR=="2003")
fac1<-factor(positive$STATE)
is.na(positive$STATE)<- positive$STATE=="  "
newdata<- positive[positive$STATE!="  ",]
level(newdata$STATE)
levels(newdata$STATE)
positive$STATE <- factor(positive$STATE)
final<-newdata[!(is.na(newdata$STATE)),]
df1<-NULL
df2<-NULL
df3<-NULL
df4<-NULL
df5<-NULL
D2<-NULL
d2<-NULL
d1<-NULL
final$TP<-as.factor($final$TP)
final$TP<-as.factor(final$TP)
final$ES<-as.factor(final$ES)
final1<-final
View(da)
View(final)
final1<-subset(final1,ES!="Other"& ES!="Other Gases"& ES!="Other Biomass"& ES!="Pumped Storage",select=c(YEAR,STATE,TP,ES,MWH))
final1
levels(final1$ES)
levels(final1$ES)[3]<-"Hydro"
levels(final1$ES)[11]<-"Solar"
levels(final1$ES)[14]<-"Wood"
levels(final1$ES)
facOld<-levels(final1$ES)
facNew<-droplevels(facOld)
facNew<-droplevels(final1)
finalNew<-facNew
dir()
libray(library(shiny)
ui <- fluidPage(
# Application title
titlePanel("Old Faithful Geyser Data"),
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
sliderInput("bins",
"Number of bins:",
min = 1,
max = 50,
value = 30)
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("distPlot")
)
)
)
server <- function(input, output, session) {
output$distPlot <- renderPlot({
# generate bins based on input$bins from ui.R
x    <- faithful[, 2]
bins <- seq(min(x), max(x), length.out = input$bins + 1)
# draw the histogram with the specified number of bins
hist(x, breaks = bins, col = 'darkgray', border = 'white')
})
}
shinyApp(ui, server))
dir()
libray(shiny)
library(shiny)
library(shinydashboard)
install.packages("shinydashboard")
install.packages("shinydashboard")
dir()
library(shiny)
library(shinydashboard)
app.R
dir()
app.R
library(shiny)
dir()
dir()
library(shiny)
library(shinydashboard)
setwd("shinyapp")
dir()
dir("../")
runApp("app.R",display.mode = "showcase")
runApp()
dir("shinyapp")
setwd("./shinyapp")
dir()
runAPP()
runApp()
shiny::runApp()
shinydashboard::runApp()
shiny::runApp()
View(finalNew)
View(finalNew)
View(final1)
View(finalNew)
View(finalNew)
View(newdata)
View(EmptyStates)
View(finalNew)
dir()
setwd("../")
finalNew
dir()
runApp("app.R")
dir()
dir()
levels(finalNew$ES)
shiny::runApp()
levels(finalNew$ES)
es_fac <-levels(finalNew$ES)
data<- finalNew
data$YEAR
data$YEAR <-as.factor(data$YEAR)
levels(data$YEAR)
levels(TP)
levels(data$TP)
data$TP(levels[6])
tpf<-factor(data$TP)
totalEnergy<= subset(data, TY=="Total Electric Power Industry"& STATE=="US-TOTAL", select=c(YEAR,STATE,TP,ES,MWH))
totalUSEnergy<- subset(data, TY=="Total Electric Power Industry"& STATE=="US-TOTAL", select=c(YEAR,STATE,TP,ES,MWH))
totalUSEnergy<- subset(data, TP=="Total Electric Power Industry"& STATE=="US-TOTAL", select=c(YEAR,STATE,TP,ES,MWH))
View(totalUSEnergy)
View(totalUSEnergy)
runApp()
noUS_totalEnergy<- subset(totalUSEnergy,ES!="total",select=c(YEAR,STATE,TP,ES,MWH))
noUS_totalEnergy$ES <-droplevels(noUS_totalEnergy$ES)
levels(noUS_totalEnergy$ES)
View(noUS_totalEnergy)
noUS_totalEnergy$ES<- noUS_totalEnergy$ES[!(noUS_totalEnergy$ES % in % "Total")]
noUS_totalEnergy$ES<- noUS_totalEnergy$ES[!(noUS_totalEnergy$ES %in% "Total")]
noUS_totalEnergy<- subset(totalUSEnergy,!(ES=="total"),select=c(YEAR,STATE,TP,ES,MWH))
noUS_totalEnergy= noUS_totalEnergy[!noUS_totalEnergy$ES=="Total",]
noUS_totalEnergy$ES<- droplevels(noUS_totalEnergy$ES)
levels(noUS_totalEnergy$ES)
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages(tidyverse)
install.packages(tidyverse)
install.packages("tidyverse")
runApp()
temp <- noUS_totalEnergy %>%
group_by(YEAR) %>%
mutate(amount_percent = MWH/ sum(MWH) *100 ) %>%
q()
temp <- noUS_totalEnergy %>%
group_by(YEAR) %>%
mutate(amount_percent = MWH/ sum(MWH) *100 )
View(temp)
View(temp)
runApp()
runApp()
data_percent <- as.data.frame(temp)
temp <- NULL
View(data_percent)
View(data_percent)
runApp()
runApp()
ggplot(noUS_totalEnergy, aes(x=YEAR, y=MWH,fill=ES)) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "The energy amount produced Unit: MegaWattHours ")
geom_line(aes(x=YEAR, y=MWH, color=variable)) + facet_wrap(~variable)
runApp()
sep_amount < melt(data=noUS_totalEnergy, id.vars =c("ES"))
sep_amount <- melt(data=noUS_totalEnergy, id.vars =c("ES"))
View(sep_amount)
View(sep_amount)
sep_amount <- melt(data=noUS_totalEnergy, id.vars =c("YEAR","ES","MWH"))
ggplot(sep_amount, aes(x=YEAR, y=MWH,fill=ES)) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "The energy amount produced Unit: MegaWattHours ")
geom_line(aes(x=YEAR, y=MWH, color=variable)) + facet_wrap(~variable)
ggplot(sep_amount, aes(x=YEAR, y=MWH,fill=ES)) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "The energy amount produced Unit: MegaWattHours ")+
geom_line(aes(x=YEAR, y=MWH, color=variable)) + facet_wrap(~variable)
sep_amount <- NULL
ggplot(sep_amount, aes(x=YEAR, y=MWH,fill=ES)) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "The energy amount produced Unit: MegaWattHours ")+
geom_line(aes(x=YEAR, y=MWH))
ggplot(noUS_totalEnergy, aes(x=YEAR, y=MWH,fill=ES)) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "The energy amount produced Unit: MegaWattHours ")+
geom_line(aes(x=YEAR, y=MWH))
ggplot(noUS_totalEnergy, aes(x=YEAR, y=MWH,fill=ES)) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "The energy amount produced Unit: MegaWattHours ")+
geom_line()
ggplot(noUS_totalEnergy, aes(x=YEAR, y=MWH,fill=ES)) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "The energy amount produced Unit: MegaWattHours ")+
geom_line()+theme_classic()
ggplot(noUS_totalEnergy, aes(x=YEAR,group_by(ES))) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "The energy amount produced Unit: MegaWattHours ")+
geom_smooth()+theme_classic()
ggplot(noUS_totalEnergy, aes(x=YEAR,group=(es_type))) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "The energy amount produced Unit: MegaWattHours ")+
geom_smooth()+theme_classic()
es_type <- temp <- noUS_totalEnergy %>% + group_by(ES)
es_type <- noUS_totalEnergy %>% + group_by(ES)
es_type <- noUS_totalEnergy %>% + group_by(YEAR)
ggplot(noUS_totalEnergy, aes(x=YEAR,y=MWH,group=(ES))) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "The energy amount produced Unit: MegaWattHours ")+
geom_smooth()+theme_classic()
color_group <- c("#e41a1c","#377eb8","#4daf4a","#984ea3","#ff7f00","#ffff33","#a65628","#f781bf","#a6cee3")
ggplot(noUS_totalEnergy, aes(x=YEAR,y=MWH,group=color_group)) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "The energy amount produced Unit: MegaWattHours ")+
geom_smooth()+theme_classic()
View(noUS_totalEnergy)
View(noUS_totalEnergy)
ggplot(noUS_totalEnergy, mapping=aes(x=YEAR,y=MWH,group=color_group)) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "The energy amount produced Unit: MegaWattHours ")+
geom_smooth()+theme_classic()
ggplot(noUS_totalEnergy, mapping=aes(x=YEAR,y=MWH,group=color_group)) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "The energy amount produced Unit: MegaWattHours ")+
geom_line()
color_group
ggplot(noUS_totalEnergy, mapping=aes(x=YEAR,y=MWH,group=ES)) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "The energy amount produced Unit: MegaWattHours ")+
geom_line()
ggplot(noUS_totalEnergy, mapping=aes(x=YEAR,y=MWH,group=ES)) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "The energy amount produced Unit: MegaWattHours ")+
geom_line()+scale_color_manual(values=color_group)+theme(legend.position = "left")
ggplot(noUS_totalEnergy, mapping=aes(x=YEAR,y=MWH,group=ES)) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "The energy amount produced Unit: MegaWattHours ")+
geom_line(color=color_group)+theme(legend.position = "left")
ggplot(noUS_totalEnergy, mapping=aes(x=YEAR,y=MWH,group=color_group)) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "The energy amount produced Unit: MegaWattHours ")+
geom_line()
ggplot(noUS_totalEnergy, mapping=aes(x=YEAR,y=MWH,group=ES)) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "The energy amount produced Unit: MegaWattHours ")+
geom_line()
ggplot(noUS_totalEnergy, mapping=aes(x=YEAR,y=MWH/10,group=ES)) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "The energy amount produced Unit: MegaWattHours ")+
geom_line()
summary(ES)
summary(noUS_totalEnergy$MWH)
ggplot(noUS_totalEnergy, mapping=aes(x=YEAR,y=MWH/10,group=ES)) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "The energy amount produced Unit: MegaWattHours ")+coord_cartesian(ylim=c(3.600e+05,2.020e+09))+
geom_line()
ggplot(noUS_totalEnergy, mapping=aes(x=YEAR,y=MWH/10,group=ES)) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "The energy amount produced Unit: MegaWattHours ")+ coord_cartesian(ylim=c(300000,2.020e+09))+
geom_line()
ggplot(noUS_totalEnergy, mapping=aes(x=YEAR,y=MWH/100000,group=ES)) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "The energy amount produced Unit: MegaWattHours ")+ coord_cartesian(ylim=c(3,20000))+
geom_line()
ggplot(noUS_totalEnergy, mapping=aes(x=YEAR,y=MWH/100000,group=ES)) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "The energy amount produced Unit: MegaWattHours ")+ coord_cartesian(ylim=c(3,20000))+
geom_line()
ggplot(noUS_totalEnergy, mapping=aes(x=YEAR,y=MWH/1000000,group=ES)) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "The energy amount produced Unit: MegaWattHours ")+ coord_cartesian(ylim=c(0,2000))+
geom_line()
ggplot(noUS_totalEnergy, mapping=aes(x=YEAR,y=MWH/1000000,group=ES)) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "The energy amount produced Unit: MegaWattHours ")+ coord_cartesian(ylim=c(0,2000))+
geom_line(color=ES)
ggplot(noUS_totalEnergy, mapping=aes(x=YEAR,y=MWH/1000000,group=ES)) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "The energy amount produced Unit: MegaWattHours ")+ coord_cartesian(ylim=c(0,2000))+
geom_line(color=noUS_totalEnergy$ES)
ggplot(noUS_totalEnergy, mapping=aes(x=YEAR,y=MWH/1000000,group=ES)) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "The energy amount produced Unit: MegaWattHours ")+ coord_cartesian(ylim=c(0,2000))+
geom_line(color=color_group)
ggplot(noUS_totalEnergy, mapping=aes(x=YEAR,y=MWH/1000000,group=ES,colour=color_group)) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "The energy amount produced Unit: MegaWattHours ")+ coord_cartesian(ylim=c(0,2000))+
geom_line(size=9)
ggplot(noUS_totalEnergy, mapping=aes(x=YEAR,y=MWH/1000000,group=ES,color=EZ)) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "The energy amount produced Unit: MegaWattHours ")+ coord_cartesian(ylim=c(0,2000))+
geom_line(size=9)
ggplot(noUS_totalEnergy, mapping=aes(x=YEAR,y=MWH/1000000,group=ES,color=ES)) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "The energy amount produced Unit: MegaWattHours ")+ coord_cartesian(ylim=c(0,2000))+
geom_line(size=9)
ggplot(noUS_totalEnergy, mapping=aes(x=YEAR,y=MWH/1000000,group=ES,color=ES)) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "The energy amount produced Unit: MegaWattHours ")+ coord_cartesian(ylim=c(0,2000))+
geom_line(size=2)
ggplot(noUS_totalEnergy, mapping=aes(x=YEAR,y=MWH/1000000,group=ES,color=ES)) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "The energy amount produced Unit: MegaWattHours ")+ coord_cartesian(ylim=c(0,2000))+
geom_line(size=2)+theme(legend.position = "left")
summary(noUS_totalEnergy$MWH)
ggplot(noUS_totalEnergy, mapping=aes(x=YEAR,y=MWH/1000000,group=ES,color=ES)) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "The energy amount produced Unit: GigaWattHours ")+ coord_cartesian(ylim=c(0,2000))+
geom_line(size=2)+theme(legend.position = "left")
ggplot(noUS_totalEnergy, mapping=aes(x=YEAR,y=MWH/1000000,group=ES,color=ES)) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "The energy amount produced Unit: Million MegaWattHours ")+ coord_cartesian(ylim=c(0,2000))+
geom_line(size=2)+theme(legend.position = "left")
ggplot(noUS_totalEnergy, mapping=aes(x=YEAR,y=MWH/1000000,group=ES,color=ES)) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "The energy amount produced Unit: Million MegaWattHours ")+ coord_cartesian(ylim=c(0,2000))+
geom_line(size=1)+theme(legend.position = "left")
ggplot(noUS_totalEnergy, mapping=aes(x=YEAR,y=MWH/1000000,group=ES,color=ES)) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "The energy amount produced Unit: Million MegaWattHours ")+ coord_cartesian(ylim=c(0,2000))+
geom_line(size=1)+theme(legend.position = "left")
ggplot(noUS_totalEnergy, mapping=aes(x=YEAR,y=MWH/1000000,group=ES,color=ES)) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "Amount Produced Unit: Million MegaWattHours ")+ coord_cartesian(ylim=c(0,2000))+
geom_line(size=1)+theme(legend.position = "left")
runApp()
runApp()
runApp()
runApp()
ggplot(noUS_totalEnergy, mapping=aes(x=YEAR,y=MWH/1000000,group=ES,color=ES)) +labs(title="        The amount of each energy source per year",
x="The year from 1990 to 2019", y = "Amount Produced Unit: Million MegaWattHours ")+ coord_cartesian(ylim=c(0,2000))+
geom_line(size=1)+theme(legend.position = "left")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
view(data_percent)
formattable(data_percent)
with(data_percent,table(data_percent))
table(data_percent)
runApp()
table_amount_percent <- table(data_percent)
runApp()
runApp()
levels(data_percent$ES)
runApp()
runApp()
runApp()
runApp()
runApp()
